{
  "1. Log Similarity Clusters": {
    "description": "Identify patterns in log messages that are semantically or syntactically similar.",
    "prompt": "Context: {user_query}\nGraph Schema: {schema}\nGraph Results: {graph_results}\nAdditional Context: {additional_context}\n\nAnalyze the graph result, schema, and any relevant inputs.\nFocus on identifying technical patterns, relationships, and actionable insights.\nThen respond strictly in the Markdown format below.\n\nYou must respond strictly in the following Markdown format:\n\n### \ud83e\udde0 Problem Summary\n[One-sentence summary of the issue]\n\n### \ud83d\udd0d Details\n- **File**: ...\n- **Method**: ...\n- **Log Message**: ...\n- **Timestamp**: ...\n\n### \ud83d\udd27 Suggested Action\n[Developer- or support-level action to take next]\n\n### \ud83d\udccc Notes\n[Any extra patterns, metadata, or useful annotations]\n\nYou are identifying log similarity clusters.\nGiven:\n- A graph result with multiple log lines\n- Timestamps, messages, and error levels\n\nYour task:\n1. Group similar logs based on message patterns\n2. Highlight any repeated log themes across different files or methods\n3. Score similarity if applicable\nOutput concise patterns and their affected areas."
  },
  "2. Source Code Inlining (Only When Relevant)": {
    "description": "Extract relevant source code snippets tied to failing methods or log locations.",
    "prompt": "Context: {user_query}\nGraph Schema: {schema}\nGraph Results: {graph_results}\nAdditional Context: {additional_context}\n\nAnalyze the graph result, schema, and any relevant inputs.\nFocus on identifying technical patterns, relationships, and actionable insights.\nThen respond strictly in the Markdown format below.\n\nYou must respond strictly in the following Markdown format:\n\n### \ud83e\udde0 Problem Summary\n[One-sentence summary of the issue]\n\n### \ud83d\udd0d Details\n- **File**: ...\n- **Method**: ...\n- **Log Message**: ...\n- **Timestamp**: ...\n\n### \ud83d\udd27 Suggested Action\n[Developer- or support-level action to take next]\n\n### \ud83d\udccc Notes\n[Any extra patterns, metadata, or useful annotations]\n\nYou are showing relevant source code for debugging.\nGiven:\n- A file, method name, and error line number\n- Full method or function code\n\nYour task:\n1. Extract the method or function code causing the error\n2. Optionally highlight lines tied to log statements or failures\n3. Provide a minimal snippet only if it helps explain the failure\nReturn clean, isolated code with short annotation."
  },
  "3. Anomaly Score Reasoning": {
    "description": "Use anomaly scores from the graph to prioritize which log or code areas are most likely suspicious or abnormal.",
    "prompt": "Context: {user_query}\nGraph Schema: {schema}\nGraph Results: {graph_results}\nAdditional Context: {additional_context}\n\nAnalyze the graph result, schema, and any relevant inputs.\nFocus on identifying technical patterns, relationships, and actionable insights.\nThen respond strictly in the Markdown format below.\n\nYou must respond strictly in the following Markdown format:\n\n### \ud83e\udde0 Problem Summary\n[One-sentence summary of the issue]\n\n### \ud83d\udd0d Details\n- **File**: ...\n- **Method**: ...\n- **Log Message**: ...\n- **Timestamp**: ...\n\n### \ud83d\udd27 Suggested Action\n[Developer- or support-level action to take next]\n\n### \ud83d\udccc Notes\n[Any extra patterns, metadata, or useful annotations]\n\nYou are using anomaly scores from the knowledge graph.\nGiven:\n- Log lines, timestamps, and anomaly scores\n\nYour task:\n1. Identify which logs or methods have the highest anomaly score\n2. Justify why these are likely the root cause (e.g., rare frequency, timing)\n3. Recommend prioritization order for investigation\nReturn a ranked summary of anomalies."
  },
  "4. Graph Traversal Notes": {
    "description": "Trace how errors propagate across connected entities in the graph.",
    "prompt": "Context: {user_query}\nGraph Schema: {schema}\nGraph Results: {graph_results}\nAdditional Context: {additional_context}\n\nAnalyze the graph result, schema, and any relevant inputs.\nFocus on identifying technical patterns, relationships, and actionable insights.\nThen respond strictly in the Markdown format below.\n\nYou must respond strictly in the following Markdown format:\n\n### \ud83e\udde0 Problem Summary\n[One-sentence summary of the issue]\n\n### \ud83d\udd0d Details\n- **File**: ...\n- **Method**: ...\n- **Log Message**: ...\n- **Timestamp**: ...\n\n### \ud83d\udd27 Suggested Action\n[Developer- or support-level action to take next]\n\n### \ud83d\udccc Notes\n[Any extra patterns, metadata, or useful annotations]\n\nYou are tracing the issue across the knowledge graph.\nGiven:\n- A graph result (File \u2192 Method \u2192 LogLine)\n- Timestamps and log frequencies\n\nYour task:\n1. Trace relationships between methods and files linked to the log event\n2. Explain which upstream or downstream components may be involved\n3. Help locate the full impact path for the error\nReturn a step-by-step traversal with call or relation notes."
  }
}